name: Selenium UI Tests

on:
  push:
    branches: [ "master" ]
    paths:
      - 'MoGYSD.Selenium/**'
      - '.github/workflows/selenium-tests.yml'
  pull_request:
    branches: [ "master" ]
    paths:
      - 'MoGYSD.Selenium/**'
      - '.github/workflows/selenium-tests.yml'

env:
  DOTNET_VERSION: '9.0.x'
  CHROME_VERSION: 'latest'

jobs:
  test:
    name: Run Selenium Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        cache: true
      
    - name: Install Chrome
      uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: ${{ env.CHROME_VERSION }}
      
    - name: Create appsettings.json
      run: |
        mkdir -p MoGYSD.Selenium
        cat > MoGYSD.Selenium/appsettings.json << 'EOF'
        {
          "AppSettings": {
            "BaseUrl": "${{ secrets.APP_BASE_URL }}",
            "AdminUsername": "${{ secrets.ADMIN_USERNAME }}",
            "AdminPassword": "${{ secrets.ADMIN_PASSWORD }}",
            "Headless": "true"
          }
        }
        EOF
        
    - name: Setup ChromeDriver
      uses: nanasess/setup-chromedriver@v2
      with:
        # Optional: ensure the installed ChromeDriver version matches the installed Chrome
        # This step handles the ChromeDriver setup automatically
        matching-chromedriver-version: true

    - name: Install dependencies
      working-directory: MoGYSD.Selenium
      run: dotnet restore
      
    - name: Build
      working-directory: MoGYSD.Selenium
      run: dotnet build --no-restore --configuration Release
      
    - name: Test with logging
      working-directory: MoGYSD.Selenium
      run: |
        mkdir -p TestResults
        dotnet test --no-build --configuration Release \
          --logger "console;verbosity=detailed" \
          --logger "trx;LogFileName=test-results.trx" \
          --results-directory TestResults \
          --collect:"XPlat Code Coverage"
      env:
        # Required for Chrome to find ChromeDriver
        PATH: ${{ env.PATH }}:/usr/local/share/chromedriver-linux64
        # Required for Chrome to run in container
        CHROMEWEBDRIVER: /usr/local/share/chromedriver-linux64
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          MoGYSD.Selenium/TestResults/**/*.trx
          MoGYSD.Selenium/TestResults/**/*.cobertura.xml
          MoGYSD.Selenium/TestResults/**/coverage.json
        retention-days: 7
      
    - name: Upload screenshots on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-screenshots
        path: MoGYSD.Selenium/TestResults/**/Screenshots/*
        retention-days: 7