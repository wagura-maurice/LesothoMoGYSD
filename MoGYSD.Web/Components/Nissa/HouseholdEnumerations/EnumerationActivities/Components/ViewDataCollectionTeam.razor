@using MoGYSD.Business.Views.Nissa.HHEnumerations
<MudDialog>
    <DialogContent>
        <!-- Header Section -->
        <div class="d-flex align-center mb-4">
            <MudIcon Icon="@Icons.Material.Filled.Groups" Color="Color.Primary" Class="mr-2" />
            <div>
                <MudText Typo="Typo.h5" Class="text-primary mb-0">
                    <b>Enumerator Assignment</b>
                </MudText>
                <MudText Typo="Typo.caption" Color="Color.Secondary">View enumerators by village</MudText>
            </div>
        </div>

        @if (GroupedData?.Any() == true)
        {
            <!-- Summary Cards -->
            <MudGrid Class="mb-4">
                <MudItem xs="12" sm="6" md="4">
                    <MudPaper Class="pa-3" Elevation="0" Style="border-left: 4px solid var(--mud-palette-primary);">
                        <div class="d-flex align-center">
                            <MudIcon Icon="@Icons.Material.Filled.LocationCity" Class="mr-2" />
                            <div>
                                <MudText Typo="Typo.subtitle2" Color="Color.Secondary">District</MudText>
                                <MudText Typo="Typo.h6">@GroupedData.First().First().DistrictName</MudText>
                            </div>
                        </div>
                    </MudPaper>
                </MudItem>
                <MudItem xs="12" sm="6" md="4">
                    <MudPaper Class="pa-3" Elevation="0" Style="border-left: 4px solid var(--mud-palette-primary);">
                        <div class="d-flex align-center">
                            <MudIcon Icon="@Icons.Material.Filled.House" Class="mr-2" />
                            <div>
                                <MudText Typo="Typo.subtitle2" Color="Color.Secondary">Community Council</MudText>
                                <MudText Typo="Typo.h6">@GroupedData.First().First().CommunityCouncilName</MudText>
                            </div>
                        </div>
                    </MudPaper>
                </MudItem>
                <MudItem xs="12" sm="6" md="4">
                    <MudPaper Class="pa-3" Elevation="0" Style="border-left: 4px solid var(--mud-palette-primary);">
                        <div class="d-flex align-center">
                            <MudIcon Icon="@Icons.Material.Filled.PeopleAlt" Class="mr-2" />
                            <div>
                                <MudText Typo="Typo.subtitle2" Color="Color.Secondary">Total Enumerators</MudText>
                                <MudText Typo="Typo.h6">@GroupedData.Sum(v => v.Count())</MudText>
                            </div>
                        </div>
                    </MudPaper>
                </MudItem>
            </MudGrid>

            <!-- Village and Enumerator List -->
            <MudPaper Elevation="0" Class="pa-0" Style="border: 1px solid #e0e0e0; border-radius: 8px;">
                @foreach (var villageGroup in GroupedData)
                {
                    var village = villageGroup.First();
                    
                    <div class="pa-4" Style="border-bottom: 1px solid #eeeeee;">
                        <!-- Village Header -->
                        <div class="d-flex align-center mb-3">
                            <MudIcon Icon="@Icons.Material.Filled.LocationOn" Color="Color.Primary" Class="mr-2" />
                            <MudText Typo="Typo.subtitle1" Color="Color.Primary">@village.VillageName</MudText>
                        </div>

                        <!-- Enumerator Table -->
                        <MudTable Items="@villageGroup" Class="ml-4" Dense="true" Hover="true">
                            <HeaderContent>
                                <MudTh>Enumerator Name</MudTh>
                                <MudTh>Role</MudTh>
                                <MudTh>Plan</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd>@context.EnumeratorNames</MudTd>
                                <MudTd>
                                    @if (context.IsSupervisor)
                                    {
                                        <MudChip T="string" Color="Color.Warning" Variant="Variant.Filled" Size="Size.Small">
                                            Supervisor
                                        </MudChip>
                                    }
                                    else
                                    {
                                        <MudChip T="string" Color="Color.Info" Variant="Variant.Filled" Size="Size.Small">
                                            Enumerator
                                        </MudChip>
                                    }
                                </MudTd>
                                <MudTd>@context.HHEnumerationPlanName</MudTd>
                            </RowTemplate>
                        </MudTable>
                    </div>
                }
            </MudPaper>
        }
        else
        {
            <MudPaper Class="pa-4 text-center" Elevation="0">
                <MudIcon Icon="@Icons.Material.Filled.GroupOff" Size="Size.Large" Color="Color.Secondary" Class="mb-2" />
                <MudText Typo="Typo.body1" Color="Color.Secondary">No enumerators assigned to villages</MudText>
            </MudPaper>
        }
    </DialogContent>

    <DialogActions>
        <MudButton 
            OnClick="Cancel" 
            Color="Color.Primary" 
            Variant="Variant.Outlined"
            EndIcon="@Icons.Material.Filled.Close"
            Class="px-4">
            Close
        </MudButton>
    </DialogActions>
</MudDialog>

<style>
    .mud-table-cell {
        padding: 8px 16px;
    }
    
    .mud-table-row:hover {
        background-color: #f5f5f5 !important;
    }
</style>

@code {
    [CascadingParameter] private IMudDialogInstance Dialog { get; set; }

    [Parameter] public List<EnumerationTeamView> Data { get; set; } = new();


    private void Cancel() => Dialog.Cancel();

    private IEnumerable<IGrouping<int, EnumerationTeamView>> GroupedData => 
    _groupedByVillage?.Any() == true 
        ? _groupedByVillage 
        : null;

    // State
    private List<EnumerationTeamView> _enumeratorAssignments = new();
    private bool _isLoading = true;

    // Grouped data for display
    private ILookup<int, EnumerationTeamView> _groupedByVillage;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
        _isLoading = false;
    }

    private async Task LoadData()
    {
        try 
        {
            // Fetch enumerator assignments for this community council
            _enumeratorAssignments = Data;
            
            // Group by village for display
            _groupedByVillage = _enumeratorAssignments
                .Where(x => x.VillageId.HasValue)
                .ToLookup(x => x.VillageId.Value);
        }
        catch (Exception ex)
        {
            // Handle error (e.g., show error message)
            Console.Error.WriteLine($"Error loading enumerator data: {ex.Message}");
        }
    }
}
