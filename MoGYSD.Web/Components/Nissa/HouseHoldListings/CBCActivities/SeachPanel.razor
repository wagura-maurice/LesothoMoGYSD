@using MoGYSD.Web.Components.HouseHoldListings.CBCActivities

<MudExpansionPanel Text="Expand to apply search filter">
    <MudGrid Class="py-2">
        <MudItem xs="12" sm="6">
            <MudTextField Variant="Variant.Outlined" @bind-Value="Filter.Name" Label="Search by Name" />
        </MudItem>
        <MudItem xs="12" sm="6">
            <DistrictAutocomplete Variant="Variant.Outlined" Label="Search by District"
                                  @bind-Value="Filter.DistrictId">
            </DistrictAutocomplete>
        </MudItem>
        <MudItem xs="12" sm="6">
            <CommunityCouncilAutocomplete Variant="Variant.Outlined" Label="Search by Community Council" IsCascading="true"
                                          @bind-Value="Filter.CommunityCouncilId" DistrictId="Filter.DistrictId">
            </CommunityCouncilAutocomplete>
        </MudItem>
        <MudItem xs="12" sm="6">
            <PartnersAutocomplete Variant="Variant.Outlined" Label="Search by Responsible Organisation"
                                          @bind-Value="Filter.PartnerId" DistrictId="Filter.DistrictId">
            </PartnersAutocomplete>
        </MudItem>
        <MudItem xs="12">
            <div class="d-flex justify-content-between mt-2">
                <MudButton Variant="Variant.Filled"
                           Color="Color.Secondary"
                           StartIcon="@Icons.Material.Filled.Clear"
                           OnClick="ClearFilter"
                           Class="ml-2">
                    Clear
                </MudButton>
                <MudButton Variant="Variant.Filled"
                           Color="Color.Primary"
                           StartIcon="@Icons.Material.Filled.Search"
                           OnClick="OnFilter">
                    Search
                </MudButton>
            </div>
        </MudItem>
    </MudGrid>
</MudExpansionPanel>

@code {
    [Parameter] public CBCActivitySearchFilter Filter { get; set; } = new();
    [Parameter] public EventCallback OnFilterApplied { get; set; }

    private async Task OnFilter()
    {
        await OnFilterApplied.InvokeAsync();
    }
    private async Task ClearFilter()
    {
        // Reset all filter properties to their default values
        Filter.Name = null;
        Filter.DistrictId = null;
        Filter.CommunityCouncilId = null;
        Filter.PartnerId = null;

        await OnFilterApplied.InvokeAsync();
    }
}
