@using MoGYSD.Business.Views.Missa.Setups
@using MoGYSD.Web.Components.Missa.Facilities
<MudExpansionPanel Text="Expand to apply search filters" IsInitiallyExpanded="true">
    <PanelContent>
        <MudGrid Class="mt-2">
            <MudItem xs="12" sm="12" md="3">
                <MudTextField @bind-Value="Filter.Code"
                              Label="Code"
                              Variant="Variant.Outlined"
                              Margin="Margin.Dense"
                              Clearable="true"
                              Dense="true" />
            </MudItem>
            <MudItem xs="12" sm="12" md="3">
                <MudTextField @bind-Value="Filter.Name"
                              Label="Facility Name"
                              Variant="Variant.Outlined"
                              Margin="Margin.Dense"
                              Clearable="true"
                              Dense="true" />
            </MudItem>

            <MudItem xs="12" sm="6" md="3">
                <FacilityTypeAutocomplete Variant="Variant.Outlined" Label="Facility Type"
                                      For="@(() => Filter.FacilityTypeId)"
                                      @bind-Value="Filter.FacilityTypeId" />
            </MudItem>

            <MudItem xs="12" sm="6" md="3">
                <SystemCodeAutocomplete Variant="Variant.Outlined" Label="Category"
                                        For="@(() => Filter.CategoryId)"
                                        @bind-Value="Filter.CategoryId"
                                        ParentCode="FacilityCategory">
                </SystemCodeAutocomplete>
            </MudItem>

            <MudItem xs="12" class="d-flex justify-end mt-4">
                <MudButton Variant="Variant.Filled"
                           Color="Color.Primary"
                           OnClick="ApplyFilterClicked"
                           Class="me-2">
                    Filter
                </MudButton>

                <MudButton Variant="Variant.Outlined"
                           Color="Color.Secondary"
                           OnClick="ClearFilterClicked">
                    Clear
                </MudButton>
            </MudItem>
        </MudGrid>
    </PanelContent>
</MudExpansionPanel>

@code {
    [Parameter]
    public FacilitiesSearchFilter Filter { get; set; } = new();

    [Parameter]
    public EventCallback OnFilterApplied { get; set; }

    [Parameter]
    public IEnumerable<FacilityTypeView> FacilityTypes { get; set; } = Enumerable.Empty<FacilityTypeView>();



    private async Task ApplyFilterClicked()
    {
        await OnFilterApplied.InvokeAsync();
    }

    private async Task ClearFilterClicked()
    {
        Filter.Code = null;
        Filter.Name = null;
        Filter.FacilityTypeId = null;
        Filter.CategoryId = null;
        StateHasChanged();
        await OnFilterApplied.InvokeAsync();
    }
}

