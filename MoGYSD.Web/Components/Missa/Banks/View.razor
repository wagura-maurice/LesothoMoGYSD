@page "/bank/view/{Id:int}"

@using MoGYSD.Business.Views.Missa.Setups

@if (_isLoading)
{
    <div class="d-flex justify-center pa-10">
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
    </div>
}
else if (Model != null)
{
    <MudGrid Class="mb-3" AlignItems="Align.Center" Justify="Justify.SpaceBetween">
        <MudItem xs="12" md="8">
            <MudText Typo="Typo.h4" Class="font-weight-bold"><b>@HeaderText</b></MudText>
        </MudItem>
        <MudItem xs="12" md="4" Class="d-flex justify-start justify-md-end">
            <MudBreadcrumbs Items="_breadcrumbItems" Class="custom-breadcrumb" />
        </MudItem>
    </MudGrid>

    <MudPaper Class="pa-4 pa-md-6" Elevation="3">
        <MudCard Elevation="0">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h5"><b>Bank Details</b></MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudGrid Spacing="3">
                    <MudItem xs="12" sm="6">
                        <MudText><b>Name:</b> @Model.Name</MudText>
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudText><b>Description:</b> @Model.BankDescription</MudText>
                    </MudItem>
                </MudGrid>
            </MudCardContent>
        </MudCard>
    </MudPaper>

    <MudPaper Class="pa-4 mt-6" Elevation="0">
        <MudButton Variant="Variant.Filled"
                   Color="Color.Secondary"
                   OnClick="BackToList"
                   StartIcon="@Icons.Material.Filled.ArrowBack">
            Back to List
        </MudButton>
    </MudPaper>
}
else
{
    <MudAlert Severity="Severity.Error" Class="mt-4">The requested Bank could not be found.</MudAlert>
    <MudButton Variant="Variant.Filled"
               Color="Color.Secondary"
               OnClick="BackToList"
               StartIcon="@Icons.Material.Filled.ArrowBack"
               Class="mt-4">
        Back to List
    </MudButton>
}


@code {
    [Parameter]
    public int Id { get; set; }

    private BankView Model { get; set; }
    private bool _isLoading = true;
    private string HeaderText = "Bank Details";
    private List<BreadcrumbItem> _breadcrumbItems = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        _isLoading = true;

        Model = await _context.BankView.AsNoTracking().FirstOrDefaultAsync(b => b.Id == Id);

        if (Model == null)
        {
            _isLoading = false;
            return;
        }

        HeaderText = $"Details for {Model.Name}";
        UpdateBreadcrumbs();

        _isLoading = false;
    }

    private void UpdateBreadcrumbs()
    {
        _breadcrumbItems =
        [
            new("Home", href: "/", icon: Icons.Material.Filled.Home),
            new("Settings", href: "/banks", icon: Icons.Material.Filled.Settings),
            new("Banks", href: "/banks"),
            new(HeaderText, href: null, disabled: true)
        ];
    }

    private void BackToList() => Navigation.NavigateTo("/banks");
}